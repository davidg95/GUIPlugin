/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package io.github.davidg95.guiplugin;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.image.BufferedImage;
import java.awt.image.ImageObserver;
import javax.swing.JDialog;
import org.bukkit.Bukkit;
import org.bukkit.Material;
import org.bukkit.World;
import org.bukkit.block.Block;
import org.bukkit.plugin.Plugin;
import org.bukkit.scheduler.BukkitScheduler;

/**
 *
 * @author David
 */
public class MapDialog extends javax.swing.JDialog {

    private static JDialog dialog;
    private BufferedImage mapImage;
    private final World world;

    /**
     * Creates new form MapDialog
     */
    public MapDialog(World world) {
        this.world = world;
        showLocation();
        initComponents();
        this.setLocationRelativeTo(null);
        this.setModal(true);
    }

    public void showLocation() {
        Graphics graph = this.getGraphics();
        ImageObserver ob = this;
        BukkitScheduler scheduler = Bukkit.getServer().getScheduler();
        scheduler.scheduleSyncDelayedTask(GUIPlugin.plugin, new Runnable() {
            @Override
            public void run() {
                mapImage = new BufferedImage(500, 500, BufferedImage.TYPE_INT_RGB);
                for (int i = 0; i < 500; i++) {
                    for (int j = 0; j < 500; j++) {

                        Block bl = world.getBlockAt(i, 255, j);
                        for (int k = 255; k > 0; k--) {
                            bl = world.getBlockAt(i, k, j);
                            if (!bl.getType().equals(Material.AIR)) {
                                break;
                            }
                        }
                        int r = 0;
                        int g = 0;
                        int b = 0;
                        if (bl.getType().equals(Material.GRASS)) {
                            r = 0;
                            g = 255;
                            b = 0;
                        } else if (bl.getType().equals(Material.STONE)) {
                            r = 155;
                            g = 155;
                            b = 155;
                        }
                        int col = new Color(r, g, b).getRGB();
                        mapImage.setRGB(i, j, col);
                    }
                }
                graph.drawImage(mapImage, 0, 0, 500, 500, ob);
            }
        });
    }

    public void paintComponent(Graphics g) {
        super.paintComponents(g);
    }

    public static void showMapDialog(World world) {
        dialog = new MapDialog(world);
        dialog.setDefaultCloseOperation(JDialog.DISPOSE_ON_CLOSE);
        dialog.setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnClose = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(500, 600));
        setMinimumSize(new java.awt.Dimension(500, 600));
        setResizable(false);

        btnClose.setText("Close");
        btnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(169, 169, 169)
                .addComponent(btnClose)
                .addContainerGap(272, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(566, Short.MAX_VALUE)
                .addComponent(btnClose)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCloseActionPerformed
        this.setVisible(false);
    }//GEN-LAST:event_btnCloseActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClose;
    // End of variables declaration//GEN-END:variables
}
